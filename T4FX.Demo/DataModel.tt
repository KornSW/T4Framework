<#@ template language="VB" debug="false" hostspecific="true" #>
<#@ assembly name="KSW.T4FX.dll" #>
<#@ assembly name="KSW.T4FX.DbModelGeneration.dll" #>
<#@ assembly name="KSW.T4FX.DbModelGeneration.EFSupport.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="KSW.T4FX" #>
<#@ import namespace="KSW.T4FX.DbModelGeneration" #>
<#@ import namespace="KSW.T4FX.DbModelGeneration.EFSupport" #>
<#@ output extension=".log" #>
<#

'
' 
' This templates requires KornSW T4 Generator Framework
' all references assemblies with schema KSW.*.dll needs to placed in you visual studio application directory
' (usually C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\)
' to be loaded correctly
' if tey are not existing, please build them using the sources them from http://github.com/KornSW/T4Framework
'
'

Using gen As New GeneratorContext(Host, generationEnvironment)

  Dim genHost = context.Host
  Dim generationEnvironment = context.GenerationEnvironment

  '###########################################################

  Dim inputFiles As String() = {
    ".\Model.edmx",
    ".\Model.custom.xml"
  }

  '###########################################################

  Dim loadedDefinition As DbModelDefinition
  Dim finalDefinition As DbModelDefinition = Nothing
  For Each inputFile In inputFiles
    Select Case IO.Path.GetExtension(inputFile).ToLower()
      Case ".edmx" : loadedDefinition = EdmxToDbModelTransformer.ReadAndTransformEdmxFile(inputFile)
      Case ".xml" : loadedDefinition = DbModelXmlSerializer.DeserializeFromFile(inputFile)
      Case ".json" : loadedDefinition = DbModelJsonSerializer.DeserializeFromFile(inputFile)
      Case Else
        Throw New Exception("Invalid input file type")
    End Select
    If (finalDefinition Is Nothing) Then
      finalDefinition = loadedDefinition
    Else
      finalDefinition = DbModelMerger.MergeDefinitions(finalDefinition, loadedDefinition)
    End If
  Next

  genHost.DeleteOldOutputs()

  DbModelXmlSerializer.Serialize(finalDefinition, generationEnvironment)
  context.Host.SaveOutput(genHost.TemplateFileNameWithoutExtension + ".xml", VisualStudioGenerationHostWrapper.ESolutionItemType.EmbeddedResource)

  'DbModelJsonSerializer.Serialize(finalDefinition, generationEnvironment)
  'context.Host.SaveOutput(genHost.TemplateFileNameWithoutExtension + ".json", VisualStudioGenerationHostWrapper.ESolutionItemType.EmbeddedResource)

  Dim pocoGenerator As New PocoGenerator(finalDefinition, context)
  pocoGenerator.Generate()

End Using

#>